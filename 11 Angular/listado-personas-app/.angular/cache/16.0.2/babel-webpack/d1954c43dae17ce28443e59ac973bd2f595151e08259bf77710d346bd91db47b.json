{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Persona } from '../../persona.model';\nlet FormularioComponent = class FormularioComponent {\n  // @ViewChild('nombreInput')\n  // nombreInput:ElementRef;\n  // @ViewChild('apellidoInput')\n  // apellidoInput:ElementRef;\n  // agregarPersona(){\n  //   let persona1=new Persona(this.nombreInput,this.apellidoInput);\n  //   this.personaCreada.emit(persona1);\n  // }\n  // agregarPersona(nombreInput:HTMLInputElement, apellidoInput:HTMLInputElement){\n  //   let persona1=new Persona(nombreInput.value, apellidoInput.value);\n  //   this.personaCreada.emit(persona1);\n  // }\n  //Inyeccion de dependencia\n  constructor(loggingService, personasService, router, route) {\n    this.loggingService = loggingService;\n    this.personasService = personasService;\n    this.router = router;\n    this.route = route;\n    // @Output()\n    // personaCreada=new EventEmitter<Persona>();\n    this.nombreInput = '';\n    this.apellidoInput = '';\n    this.personasService.saludar.subscribe(i => alert('El indici es:' + i));\n  }\n  // agregarPersona(){\n  //   let persona1=new Persona(this.nombreInput.nativeElement.value, this.apellidoInput.nativeElement.value);\n  //   this.loggingService.enviaMensajeAconsoloca(\"Enviamos persona:\"+persona1.nombre);\n  //   this.personasService.agregarPersona(persona1);\n  //   //this.personaCreada.emit(persona1);\n  // }\n  ngOnInit() {\n    this.i = this.route.snapshot.params['id'];\n    if (this.i) {\n      //Si el indice es diferente de nulo, entonces editar\n      let persona = this.personasService.encontrarPersona(this.i);\n      this.nombreInput = persona.nombre;\n      this.apellidoInput = persona.apellido;\n    }\n  }\n  onGuardarPersona() {\n    let persona1 = new Persona(this.nombreInput, this.apellidoInput);\n    // this.loggingService.enviaMensajeAconsoloca(\n    //   'Enviamos persona:' + persona1.nombre\n    // );\n    if (this.i) {\n      //modo edicion\n      this.personasService.modificarPersona(this.i, persona1);\n    } else {\n      this.personasService.agregarPersona(persona1);\n    }\n    this.router.navigate(['personas']);\n  }\n};\nFormularioComponent = __decorate([Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.css']\n  //providers:[LoggingService] //Inyeccion de dependencia\n})], FormularioComponent);\nexport { FormularioComponent };","map":{"version":3,"names":["Component","Persona","FormularioComponent","constructor","loggingService","personasService","router","route","nombreInput","apellidoInput","saludar","subscribe","i","alert","ngOnInit","snapshot","params","persona","encontrarPersona","nombre","apellido","onGuardarPersona","persona1","modificarPersona","agregarPersona","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\VIC\\Documents\\VICTOR CRUZ GOMEZ\\Master Desarrollo\\Desarrollo web\\11 Angular\\listado-personas-app\\src\\app\\personas\\formulario\\formulario.component.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Output,\n  ViewChild,\n  OnInit,\n} from '@angular/core';\nimport { Persona } from '../../persona.model';\nimport { outputAst } from '@angular/compiler';\nimport { LoggingService } from '../../loggingService.service';\nimport { PersonasService } from '../../personasService.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.css'],\n  //providers:[LoggingService] //Inyeccion de dependencia\n})\nexport class FormularioComponent {\n  // @Output()\n  // personaCreada=new EventEmitter<Persona>();\n\n  nombreInput: string = '';\n  apellidoInput: string = '';\n  i: number;\n\n  // @ViewChild('nombreInput')\n  // nombreInput:ElementRef;\n\n  // @ViewChild('apellidoInput')\n  // apellidoInput:ElementRef;\n\n  // agregarPersona(){\n  //   let persona1=new Persona(this.nombreInput,this.apellidoInput);\n  //   this.personaCreada.emit(persona1);\n  // }\n\n  // agregarPersona(nombreInput:HTMLInputElement, apellidoInput:HTMLInputElement){\n  //   let persona1=new Persona(nombreInput.value, apellidoInput.value);\n  //   this.personaCreada.emit(persona1);\n  // }\n\n  //Inyeccion de dependencia\n  constructor(\n    private loggingService: LoggingService,\n    private personasService: PersonasService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.personasService.saludar.subscribe((i: number) =>\n      alert('El indici es:' + i)\n    );\n  }\n\n  // agregarPersona(){\n  //   let persona1=new Persona(this.nombreInput.nativeElement.value, this.apellidoInput.nativeElement.value);\n  //   this.loggingService.enviaMensajeAconsoloca(\"Enviamos persona:\"+persona1.nombre);\n  //   this.personasService.agregarPersona(persona1);\n  //   //this.personaCreada.emit(persona1);\n  // }\n\n  ngOnInit() {\n    this.i = this.route.snapshot.params['id'];\n    if(this.i){ //Si el indice es diferente de nulo, entonces editar\n      let persona:Persona=this.personasService.encontrarPersona(this.i);\n      this.nombreInput=persona.nombre;\n      this.apellidoInput=persona.apellido;\n    }\n  }\n\n  onGuardarPersona() {\n    let persona1 = new Persona(this.nombreInput, this.apellidoInput);\n    // this.loggingService.enviaMensajeAconsoloca(\n    //   'Enviamos persona:' + persona1.nombre\n    // );\n\n    if (this.i) { //modo edicion\n      this.personasService.modificarPersona(this.i, persona1);\n    }else{\n      this.personasService.agregarPersona(persona1);\n    }\n\n    this.router.navigate(['personas']);\n  }\n}\n"],"mappings":";AAAA,SACEA,SAAS,QAMJ,eAAe;AACtB,SAASC,OAAO,QAAQ,qBAAqB;AAY7C,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAQ9B;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACAC,YACUC,cAA8B,EAC9BC,eAAgC,EAChCC,MAAc,EACdC,KAAqB;IAHrB,KAAAH,cAAc,GAAdA,cAAc;IACd,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IA5Bf;IACA;IAEA,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,aAAa,GAAW,EAAE;IA0BxB,IAAI,CAACJ,eAAe,CAACK,OAAO,CAACC,SAAS,CAAEC,CAAS,IAC/CC,KAAK,CAAC,eAAe,GAAGD,CAAC,CAAC,CAC3B;EACH;EAEA;EACA;EACA;EACA;EACA;EACA;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACF,CAAC,GAAG,IAAI,CAACL,KAAK,CAACQ,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACzC,IAAG,IAAI,CAACJ,CAAC,EAAC;MAAE;MACV,IAAIK,OAAO,GAAS,IAAI,CAACZ,eAAe,CAACa,gBAAgB,CAAC,IAAI,CAACN,CAAC,CAAC;MACjE,IAAI,CAACJ,WAAW,GAACS,OAAO,CAACE,MAAM;MAC/B,IAAI,CAACV,aAAa,GAACQ,OAAO,CAACG,QAAQ;;EAEvC;EAEAC,gBAAgBA,CAAA;IACd,IAAIC,QAAQ,GAAG,IAAIrB,OAAO,CAAC,IAAI,CAACO,WAAW,EAAE,IAAI,CAACC,aAAa,CAAC;IAChE;IACA;IACA;IAEA,IAAI,IAAI,CAACG,CAAC,EAAE;MAAE;MACZ,IAAI,CAACP,eAAe,CAACkB,gBAAgB,CAAC,IAAI,CAACX,CAAC,EAAEU,QAAQ,CAAC;KACxD,MAAI;MACH,IAAI,CAACjB,eAAe,CAACmB,cAAc,CAACF,QAAQ,CAAC;;IAG/C,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;CACD;AAlEYvB,mBAAmB,GAAAwB,UAAA,EAN/B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;EACxC;CACD,CAAC,C,EACW3B,mBAAmB,CAkE/B;SAlEYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}